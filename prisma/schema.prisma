generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                BigInt  @id @default(autoincrement())
  userId            BigInt
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId], map: "Account_userId_fkey")
}

model Session {
  id           BigInt   @id @default(autoincrement())
  sessionToken String   @unique
  userId       BigInt
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "Session_userId_fkey")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id                BigInt        @id @default(autoincrement())
  name              String
  email             String        @unique
  email_verified_at DateTime?
  password          String
  gambar            String?       @db.VarChar(255)
  remember_token    String?       @db.VarChar(100)
  role              EnumRoleUsers @default(USER)
  deleted_at        DateTime?     @map("deleted_at") @db.Timestamp(0)
  createdAt         DateTime?     @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt         DateTime?     @updatedAt @map("updated_at") @db.Timestamp(0)

  beritas  Beritas[]
  accounts Account[]
  sessions Session[]

  @@map("User")
}

model AboutUsSection {
  id                Int       @id @default(autoincrement())
  title             String?   @default("Tentang Kami")
  short_description String    @db.Text
  image_url         String?
  read_more_link    String?
  createdAt         DateTime? @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt         DateTime? @updatedAt @map("updated_at") @db.Timestamp(0)

  @@map("about_us_section")
}

model Kategori {
  id_kategori   BigInt     @id @default(autoincrement()) @map("id_kategori")
  nama_kategori String     @db.VarChar(100)
  slug_kategori String     @unique @db.VarChar(100)
  gambar        String?    @db.VarChar(255)
  keterangan    String?    @db.Text
  parent_id     BigInt?
  is_main_menu  Boolean    @default(false)
  urutan        Int?       @default(0)
  is_active     Boolean    @default(true)
  createdAt     DateTime   @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt     DateTime   @updatedAt @map("updated_at") @db.Timestamp(0)
  beritas       Beritas[]
  Halaman       Halaman[]
  parent        Kategori?  @relation("CategoryHierarchy", fields: [parent_id], references: [id_kategori])
  children      Kategori[] @relation("CategoryHierarchy")

  @@index([parent_id], map: "kategori_parent_id_fkey")
  @@index([is_main_menu]) // Untuk query menu utama
  @@index([is_active]) // Untuk filter kategori aktif
  @@index([urutan]) // Untuk sorting
  @@map("kategori")
}

model Beritas {
  id_berita     BigInt            @id @default(autoincrement()) @map("id_berita")
  id_user       BigInt
  id_kategori   BigInt
  bahasa        EnumBeritasBahasa @default(ID)
  updater       String            @db.VarChar(100)
  slug_berita   String            @db.VarChar(255)
  judul_berita  String            @db.VarChar(255)
  isi           String            @db.Text
  status_berita EnumStatusBerita  @default(draft)
  jenis_berita  String            @default("berita") @db.VarChar(20)
  keywords      String?           @db.Text
  thumbnail     String?           @db.VarChar(255)
  gambar        String?           @db.VarChar(255)
  icon          String?           @db.VarChar(50)
  hits          Int?              @default(0)
  urutan        Int?              @default(0)
  tanggal_post  DateTime?
  createdAt     DateTime?         @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt     DateTime?         @updatedAt @map("updated_at") @db.Timestamp(0)

  // Relasi ke model lain
  kategori Kategori @relation(fields: [id_kategori], references: [id_kategori])
  user     User     @relation(fields: [id_user], references: [id]) // ðŸ‘ˆ Tambahkan ini

  @@index([id_kategori], map: "beritas_id_kategori_fkey")
  @@index([id_user], map: "beritas_id_user_fkey") // ðŸ‘ˆ Tambahkan index untuk performa
  @@map("beritas")
}

model Halaman {
  id_halaman   BigInt    @id @default(autoincrement()) @map("id_halaman")
  judul        String    @db.VarChar(255)
  slug         String    @unique @db.VarChar(255)
  konten       String    @db.Text
  gambar       String?   @db.VarChar(255)
  menuId       BigInt?
  kategoriId   BigInt?
  is_published Boolean   @default(true)
  createdAt    DateTime  @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt    DateTime  @updatedAt @map("updated_at") @db.Timestamp(0)
  kategori     Kategori? @relation(fields: [kategoriId], references: [id_kategori])

  @@index([kategoriId], map: "halaman_kategoriId_fkey")
  @@index([is_published]) // Untuk filter halaman yang dipublikasikan
  @@index([kategoriId]) // Sudah ada, penting untuk join
  @@map("halaman")
}

model Dokters {
  id_dokter        BigInt             @id @default(autoincrement())
  nama_dokter      String
  photo            String
  userId           BigInt?
  dokter_spesialis Dokter_spesialis[]
  JadwalDokters    JadwalDokters[]

  @@map("dokters")
}

model Dokter_spesialis {
  id_dokter    BigInt
  id_spesialis BigInt
  dokter       Dokters           @relation(fields: [id_dokter], references: [id_dokter])
  spesialis    KategoriSpesialis @relation(fields: [id_spesialis], references: [id])

  @@id([id_dokter, id_spesialis])
  @@map("dokter_spesialis")
}

model KategoriSpesialis {
  id             BigInt  @id @default(autoincrement())
  nama_spesialis String
  deskripsi      String?

  dokter_spesialis Dokter_spesialis[]

  @@map("kategori_spesialis")
}

model FeatureBlocks {
  id            Int       @id @default(autoincrement())
  title         String
  description   String?   @db.Text
  icon          String?   @db.Text
  image_url     String?
  display_order Int?      @default(0)
  is_active     Boolean?  @default(true)
  createdAt     DateTime? @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt     DateTime? @updatedAt @map("updated_at") @db.Timestamp(0)

  @@map("feature_blocks")
}

model HeroSection {
  id                Int       @id @default(autoincrement())
  headline          String
  subheading        String?
  background_image  String?
  cta_button_text_1 String?   @db.VarChar(100)
  cta_button_link_1 String?
  cta_button_text_2 String?   @db.VarChar(100)
  cta_button_link_2 String?
  createdAt         DateTime? @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt         DateTime? @updatedAt @map("updated_at") @db.Timestamp(0)

  @@map("hero_section")
}

model Indikatormutu {
  id        Int       @id @default(autoincrement())
  period    String?   @db.VarChar(10)
  judul     String?   @db.VarChar(255)
  capaian   String?   @db.VarChar(100)
  target    String?   @db.VarChar(100)
  createdAt DateTime? @db.DateTime(0)
  updatedAt DateTime? @db.DateTime(0)

  @@map("indikatormutu")
}

model JadwalDokters {
  id_jadwal   BigInt   @id @default(autoincrement())
  id_dokter   BigInt
  hari        String
  jam_mulai   DateTime @db.Time(0)
  jam_selesai DateTime @db.Time(0)
  status      Int

  dokter Dokters @relation(fields: [id_dokter], references: [id_dokter])

  @@map("jadwal_dokters")
}

model Promotions {
  id          Int       @id @default(autoincrement())
  title       String
  description String?   @db.Text
  image_url   String?
  link_url    String?
  start_date  DateTime? @db.Date
  end_date    DateTime? @db.Date
  is_active   Boolean?  @default(true)
  createdAt   DateTime? @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt   DateTime? @updatedAt @map("updated_at") @db.Timestamp(0)

  @@map("promotions")
}

model WebsiteSettings {
  id                  Int       @id @default(autoincrement())
  website_name        String?   @default("Nama Rumah Sakit Anda") @db.VarChar(255)
  logo_url            String?   @db.VarChar(255)
  favicon_url         String?   @db.VarChar(255)
  logo_akreditasi_url String?   @db.VarChar(255)
  nama_akreditasi     String?   @db.VarChar(255)
  email               String?   @db.VarChar(255)
  phone               String?   @db.VarChar(255)
  address             String?   @db.VarChar(255)
  url_maps            String?   @db.Text
  facebook_url        String?   @db.VarChar(255)
  twitter_url         String?   @db.VarChar(255)
  instagram_url       String?   @db.VarChar(255)
  youtube_url         String?   @db.VarChar(255)
  footer_text         String?   @db.Text
  copyright_text      String?   @db.VarChar(255)
  createdAt           DateTime? @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt           DateTime? @updatedAt @map("updated_at") @db.Timestamp(0)

  @@map("website_settings")
}

model KritikSaran {
  id                 BigInt               @id @default(autoincrement())
  nama               String               @db.VarChar(100)
  email              String               @db.VarChar(100)
  telepon            String?              @db.VarChar(20)
  createdAt          DateTime             @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt          DateTime             @updatedAt @map("updated_at") @db.Timestamp(0)
  alamat             String               @db.VarChar(255)
  kritik             String               @db.Text
  nama_kmr_no_kmr    String?              @db.VarChar(255)
  nama_poli          String?              @db.VarChar(255)
  perawatan_terakait EnumPerawatanTerkait @default(Poliklinik)
  saran              String               @db.Text

  @@map("kritik_saran")
}

model Visitor {
  id        BigInt    @id @default(autoincrement())
  ipAddress String    @db.VarChar(45)
  visitorId String?   @db.VarChar(64)
  sessionId String?   @db.VarChar(64)
  userAgent String?   @db.Text
  referrer  String?   @db.VarChar(512)
  path      String    @db.VarChar(255)
  country   String?   @db.VarChar(2)
  city      String?   @db.VarChar(100)
  isBot     Boolean   @default(false)
  isMobile  Boolean   @default(false)
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp(0)
  expiresAt DateTime? @map("expires_at") @db.Timestamp(0)

  @@index([visitorId])
  @@index([ipAddress])
  @@map("visitors")
}

enum EnumRoleUsers {
  SUPER_ADMIN
  ADMIN
  MODERATOR
  USER
}

enum EnumStatusBerita {
  draft
  publish
}

enum EnumBeritasBahasa {
  ID
  EN
}

enum EnumPerawatanTerkait {
  Poliklinik
  RawatInap
}
